{\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 6.3.9600}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\fs44\lang22 Shell\fs32\par

\pard\sa200\sl276\slmult1 *Shell \'e9 um programa que permite fazer opera\'e7\'f5es no seu computador\par
*Ele interpreta comandos em formato de texto\par
*\b Ctrl A \b0 para o inicio da linha e \b Ctrl E \b0 para o final\par
*\b Ctrl D \b0 para apagar o caracter a frente do cursor\par
*Sempre que o sistema cria um diretorio ele cria dois arquivos especiais \b "."\b0  que representa o proprio diretorio e \b ".."\b0  que representa o diretorio pai\par
\b Direitos do usuario\par
\b0 *cada arquivo em um sistema unix tem direitos\par
*podemos especificar u(usuario), g(grupo) e o(outros), a(todos os anteriores)\par
*podemos expressar os direitos de duas formas:\par
rwx(read, write, execute) ou 421(7) ou 111 que \'e9 em binario exemplo:\par
rwx rw- r-- 421  420 400 = 764\par
*\par
\b variaveis\par
\b0 *variavel=valor\par
echo $variavel\par
formos acesscaso ar essa variavel em um subprograma(SubShell)\par
n\'e3o iremos conseguir recuperar o seu valor pois a variavel n\'e3o esta em nossa ambiente, ent\'e3o podemos dar um \b export \b0 na variavel para colocala em nosso ambiente\par
\b metacaracter\b0\par
*s\'e3o caracteres especificos do shell\par
*eles s\'e3o como caracteres de substitui\'e7\'e3o inibidores\par
*usamo-os para represantar um valor diferente do qual eles representam\par
\b stdout, stderr e stdin\par
\b0 *cada programa tem uma entrada, uma saida e uma saida de erro\par
*stdin-->ls-->stdout-->stdin-->grep-->stdout\par
*Separamos a saida normal e a saida de erro, dessa forma podemos fazer um tratamento  adicional na saida padr\'e3o, dessa forma tratamos apenas os bons resultados\par
*ls | grep text\par
*ls > res.txt //antes de executar o ls o shell cria um novo arquivo e conecta o programa ls a esse arquivo\par
*na saida de erro n\'e3o n\'e3o conseguimos redirecionar a saida para um arquivo pois com o ">" eu apenas redireciono a saida padr\'e3o\par
*para redirecionar  a saida de erro usamos:\par
\b ls pasta_inexistente 2> error.log\par
\b0 *podemos redirecionar duas saidas de uma vez\par
\b ls pasta_inexistente pasta_existente 2> error.log > success\par
grep Joker < batman.txt  \par
ls > res.txt\par
\b0 Podemos fazer como que a saida de erro seja direcionada para a saida normal:\par
\b ls blabla 24sp > res.txt 2>&1\par
\b0 _____\par
*Um link \'e9 um atalho de um lugar para o outro arquivo\par
ln -s a b\par
\b File\b0\par
*File ira testar cada argumento do arquivo para classifica-lo\par
*Ele ira realizar 3 testes(filesystem tests, magic tests,\par
e language tests.)\par
*O primeiro teste verifica se o arquivo esta vazio ou se \'e9 algum tipo de arquivo especial\par
*Os teste magicos s\'e3o usados para verificar arquivos com dados em  formatos fixos especificos ex: od primeiros 5 caracteres sendo XXXXX \'e9 um tipo XX\par
*atraves dos padr\'f5es o file tentara obter outras informa\'e7\'f5es do arquivo, por exemplo se \'e9 uma formata\'e7\'e3o  ASCII, ISO-8859-x ou UTF-8, essas caracteristicas podem ser distinguidas pelos diferentes intervalos e sequ\'eancias de bytes que constituem o texto imprim\'edvel em cada conjunto\par
*Depois do file determinar o conjunto de caracteres usado em um arquivo do tipo texto ele tentara determinar em que idioma o arquivo foi escrito,os testes de idiomas procuram por conjuntos de caracteres especificos\par
\b codigos:\b0\par
\b man (man) \b0 q to quit, -f para ver os manuais desponiveis sobre o parametro\par
\b pwd\b0  onde voc\'ea esta localizado no filesystem\par
\b mkdir \b0 para fazer um novo diretorio(make diretory)\par
\b rmdir \b0 para remover um diretorio.\par
\b ls \b0 para listar os arquivos disponiveis no meu nivel atual, \b -p \b0 para listar as exten\'e7\'f5es ou "/" para diretorios, \b -l \b0 para recuperar informa\'e7\'f5es sobre os arquivos, \b -la \b0 para mostrar arquivos escondidos, lista de conteudos do diretorio atual,\par
\b -m \b0 para separar os resultados por virgula, \b -u \b0 para ordernar o resultado pela data de acesso\b , -F ou p \b0 para utilizar "/" no final de diretorios, -F tambem ira colocar um identificador em outros itens\par
\b cat \b0 vai listar o conteudo de um arquivo em vez do diretorio, \b -e \b0 mostra informa\'e7\'f5es adicionais como as quebras de linha\par
\b cd\b0  para navegar entre os diretorios\par
\b chmod (u,g,o,a)+(r,w,x) arquivo \b0 para modificar as permi\'e7\'f5es de acesso de um arquivo\par
\b tar -cf testShell00.tar testShell00\b0\par
\b echo \b0 vai copiar oque voc\'ea colocou no parametro como um output standard\par
\b touch \b0 no permite modificar a data de acesso e modifica\'e7\'e3o do arquivo e tambem nos permite criar um arquivo, \b -t \b0 podemos modificar a data de acesso do arquivo, \b -h -t \b0 para modificar o link e n\'e3o a quem ele se linka\par
\b sh \b0 para inicial o shell\par
\b exit \b0 para sair do shell\par
\b env \b0 nos mostra nosso ambiente.\par
\b export variavel \b0 para trazer uma variavel ao nosso ambiente\par
\b wc(word count) \b0 analizara todos os arquivos passados, \b *.txt \b0 para buscar uma extes\'e3o especifica, \b -l \b0 para contar as linhas(quantidade de resutados), ele nos permite contas as linhas, palavras e caracteres de um arquivo,-w para a quantidade de palavras e \b -c \b0 para a quantidade de caracteres\par
\b *?~[ou,ou]\b0  o shell ira substituir por todos arquivos que correspondem a express\'e3o,* significa que tem um numero indeterminado de caracteres na posi\'e7\'e3o em que ele se encontra e ? \'e9 apenas 1 caracter por operador, \b ~\b0  \'e9 trocado pelo diretorio inicial da nossa conta\par
\b '*' '?' '~'\b0  para inibir, fazendo possivel utilizar esses caracteres sem serem substituidos, podemos tambem utilizar aspas duplas, o mesmo pode ser realizado com backslash "\\". A diferen\'e7a para as aspas simples para as duplas \'e9 que as duplas n\'e3o conseguem inibir "$variavel", imprimindo assim o valor da variavel, j\'e1 as simples conseguem\par
\b more \b0 ira exibir o arquivo e paginar o conteudo\par
\b head -n (2) \b0 exibi apenas o inicio de um arquivo, \b -n \b0 para definir o numero de linhas retornadas e \b -c \b0 para o numero de caracteres retornados\par
\b tail \b0 retorna o final de um arquivo\par
\b grep "filtro" arquivo \b0 nos permite filtrar um arquivo e retorna as linhas na qual a express\'e3o foi encontrada, \b -v \b0 para fazer o inverso e retornar as linhas onde o filtro n\'e3o esta presente, \b -i \b0 para n\'e3o diferenciar letras maiusculas de letras minisculas\par
\b mv \b0 para renomear arquivo ou mover arquivos\par
\b ln \b0 para criar links\par
#!/bin/ executar um arquivo shell\par
\b |\b0  passa a saida de um programa pra outro\par
\b >\b0  , redireciona a saida para dentro de um arquivo\par
\b >> \b0 ira redirecionar mas preservando qualquer informa\'e7\'e3o ja existente\par
<< \'e9 possivel mandar parametros para nosso programas ex: \b cat << palavra_chave \b0 , dessa forma iremos estar habito a escrever no cat\par
\b cut \b0 percorre cada linha e corta uma parte dela, com o -c pode indicar a posi\'e7\'e3o dos caracteres que queremos recuperar ou um periodo de caracteres ex: cut -c 1-10 //de cada linha pega do primeiro ao decimo caracter\par
\b find arquivo \b0 nos permite pesquisar em nossa arvore de arquivos, caso nenhum parametro seja passado  ele ira nos retornar cada arquivo do diretorio passado, \b -name \b0 achar um arquivo de mesmo nome, -type para retornar pelo tipo(d,l,f), \b maxdepth \b0 podemos limitar a profundidade da pesquisa, -delete para deletar ex: find -name '*~' -o -name '#*#' -delete\par
git log --prety="%H" -5\par
bash arquivo.sw\par
\b diff \b0 ar1 ar2 > ar.patch ira comparar o ar1 e ar2 e colocar as diferen\'e7as em ar.patch\par
\b patch \b0 ar2 ar.patch ira atualizar o ar2 tirando as partes desnecessarias e colocando as partes requeridas de forma que o ar1 ficara igual o ar2\par
bc \'e9 uma calculadora em nossa linha de comando\par
tar -xf arquvio_compactado\par
\{1..8\} repete o comando substituindo os numeros\par
 cp\par
truncat\par
links:\par
{{\field{\*\fldinst{HYPERLINK https://pt.stackoverflow.com/questions/68704/qual-a-diferen%C3%A7a-entre-um-link-simb%C3%B3lico-e-um-hard-link }}{\fldrslt{https://pt.stackoverflow.com/questions/68704/qual-a-diferen%C3%A7a-entre-um-link-simb%C3%B3lico-e-um-hard-link\ul0\cf0}}}}\f0\fs32\par
{{\field{\*\fldinst{HYPERLINK https://www.youtube.com/watch?v=L0xvJWRN_r0 }}{\fldrslt{https://www.youtube.com/watch?v=L0xvJWRN_r0\ul0\cf0}}}}\f0\fs32\par
{{\field{\*\fldinst{HYPERLINK https://www.vivaolinux.com.br/artigo/O-comando-LS-de-A-a-Z }}{\fldrslt{https://www.vivaolinux.com.br/artigo/O-comando-LS-de-A-a-Z\ul0\cf0}}}}\f0\fs32\par
*git log | grep commit | tail -n 5\par
vim:\par
:wq sair salvar\par
#!/bash/sw\par
tar -xf file.tar\par
xxd\f1\fs22\par
}
 